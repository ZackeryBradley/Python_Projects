# Exploring the datetime module
import datetime

#creating a date using the datetime class
future_date = datetime.date(2222,9,20)
print("Future date:",future_date)
#getting the individual month days and year 
print(future_date.year)
print(future_date.month)
print(future_date.day)

some_time = datetime.time(15,30,10)
print("Some time:",some_time)
#getting the individual times  from the time created in our "some_time" class
print(some_time.hour)
print(some_time.minute)
print(some_time.second)

# USING THE DATETIME CLASS
from datetime import datetime

future_datetime = datetime(2100,10,12,20,50,15)
print("Future date and time:", future_datetime)
#exploring the functions in the datetime module
# print(dir(datetime))

#printing the hour
print(future_datetime.hour)
#reformatting the date
print("Formatted date:", future_datetime.strftime("%B %d, %Y"))
#reformatting time
print("Formatted time:", future_datetime.strftime("%I:%M %p"))
#reformatting date AND time
print("Formatted date and time:", future_datetime.strftime("%A, %B %d, %Y %I:%M %p"))
#reformatting month
print("Formatted month:", future_datetime.strftime("%B"))
#reformatting year
print("Future year:", future_datetime.strftime("%Y"))


# converting strings to datetime object
from datetime import datetime

formatted_datetime_str = "3000-11-20 14:25:45"

parsed_datetime = datetime.strptime(formatted_datetime_str, "%Y-%m-%d %H:%M:%S")
print(parsed_datetime)

print(parsed_datetime.year)

parsed_data = datetime.strptime("June 03, 2050", "%B %d, %Y")
print(parsed_data)
#parsing the time
parsed_time = datetime.strptime("10:12 AM", "%I:%M %p")
print(parsed_time)
#parsing the month
parsed_month = datetime.strptime("June", "%B")
print(parsed_month)
#parsing the year
parsed_year = datetime.strptime("2222", "%Y")
print(parsed_year)

# working with timedelta class
from datetime import datetime, timedelta

future_datetime = datetime(2100, 12, 10, 18, 10, 45)
print(future_datetime)
#adding days to a date
print(future_datetime + timedelta(days=100))
#adding hours to a date
print(future_datetime + timedelta(hours=100))
#adding minutes to a date
print(future_datetime + timedelta(minutes=90))
#adding days, hours, and minutes to a date
print(future_datetime + timedelta(days=3, hours=5, minutes=15))

#deducting time
#deducting 5 days from the date
print(future_datetime - timedelta(days=5))
#deducting 366 days from the date
print(future_datetime - timedelta(days=365, hours=24))


# exploring the built-in time module
import time
#current time in seconds
# print(time.time())

#converting the current time in seconds to a readable format
current_time_in_seconds = time.time()
print(time.ctime(current_time_in_seconds))

#delaying a python program by using sleep
#delaying printing between "start" and "continue" by 3 seconds
start_time = time.time() 
print('Start:', start_time)
time.sleep(3)
end_time = time.time()
print('Continue:', end_time)
#subtracting start time and end time to see the actual execution time
print('Time Spent', end_time - start_time)

#seeing how long it takes python to build a list of 10,000,000
start_time = time.time()
# my_range = range(1_000_000)
my_list = list(range(10_000_000))
print(my_list[1000000])

end_time = time.time()
#rounding time spent by 2 decimal places-
print('Time Spent', round( end_time - start_time,2))


